@model CrmWebApp.Models.CompanyBusinessDailyViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="row-fluid">
    <div class="span12">
        <ul class="breadcrumb">
            <li>
                <a href="~/Home/Index">主页</a> <span class="divider"></span>
            </li>
            <li>
                <a href="~/OtaCompanies/Index">公司</a> <span class="divider"></span>
            </li>
            <li>
                <a href="~/OtaCompanies/Details?id=@Model.CompanyId">@Model.CompanyName</a><span class="divider"></span>
            </li>
            <li>
                <a href="~/CompanyBusinessDailies/Index?companyId=@Model.CompanyId">运营</a> <span class="divider"></span>
            </li>
            <li>
                <a href="#">编辑</a> <span class="divider"></span>
            </li>
        </ul>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CompanyId)
        @Html.HiddenFor(model => model.CompanyName)
        
        <div class="form-group">
            @Html.LabelFor(model => model.BussinessType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BussinessType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateUserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateUserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateUserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                @Html.ValidationMessageFor(model => model.CreateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BussinessLogDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BussinessLogDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                @Html.ValidationMessageFor(model => model.BussinessLogDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="glyphicon glyphicon-plus" onclick="ShowModal(@Model.Id , '员工数量')"></span>
                <table class="table">
                    @for (int i = 0; i < Model.EmployeeList.Count; i++)
                    {
                        var trId = "trEmployee" + i.ToString();
                        <tr id="@trId">
                            @Html.HiddenFor(e => Model.EmployeeList[i].Id, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(e => Model.EmployeeList[i].CompanyBusinessDailyId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(e => Model.EmployeeList[i].ParamName, new { htmlAttributes = new { @class = "form-control" } })
                            <td>
                                @Html.EditorFor(e => Model.EmployeeList[i].SubParamItem, new { htmlAttributes = new { @class = "form-control",id= "SubParamItem"+trId } })
                            </td>
                            <td>
                                @Html.EditorFor(e => Model.EmployeeList[i].ItemAmount, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                <span onclick="DelSubParamItem('@trId')" class="glyphicon glyphicon-remove"></span>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.BusinessAmountList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="glyphicon glyphicon-plus" onclick="ShowModal(@Model.Id , '业务结构')"></span>
                <table class="table">
                    @for (int i = 0; i < Model.BusinessAmountList.Count; i++)
                    {
                        var trId = "trBusinessAmount" + i.ToString();
                        <tr id="@trId">
                            @Html.HiddenFor(e => Model.BusinessAmountList[i].Id, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(e => Model.BusinessAmountList[i].CompanyBusinessDailyId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(e => Model.BusinessAmountList[i].ParamName, new { htmlAttributes = new { @class = "form-control" } })
                            <td>
                                @Html.EditorFor(e => Model.BusinessAmountList[i].SubParamItem, new { htmlAttributes = new { @class = "form-control", id = "SubParamItem" + trId } })
                            </td>
                            <td>
                                @Html.EditorFor(e => Model.BusinessAmountList[i].ItemAmount, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                <span onclick="DelSubParamItem('@trId')" class="glyphicon glyphicon-remove"></span>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.NewBusinessList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="glyphicon glyphicon-plus" onclick="ShowModal(@Model.Id , '新业务量')"></span>
                <table class="table">
                    @for (int i = 0; i < Model.NewBusinessList.Count; i++)
                    {
                        var trId = "trNewBusiness" + i.ToString();
                        <tr id="@trId">
                            @Html.HiddenFor(e => Model.NewBusinessList[i].Id, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(e => Model.NewBusinessList[i].CompanyBusinessDailyId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(e => Model.NewBusinessList[i].ParamName, new { htmlAttributes = new { @class = "form-control" } })
                            <td>
                                @Html.EditorFor(e => Model.NewBusinessList[i].SubParamItem, new { htmlAttributes = new { @class = "form-control", id = "SubParamItem" + trId } })
                            </td>
                            <td>
                                @Html.EditorFor(e => Model.NewBusinessList[i].ItemAmount, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                <span onclick="DelSubParamItem('@trId')" class="glyphicon glyphicon-remove"></span>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.ItSystemList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="glyphicon glyphicon-plus" onclick="ShowModal(@Model.Id , '软件系统')"></span>
                <table class="table">
                    @for (int i = 0; i < Model.ItSystemList.Count; i++)
                    {
                        var trId = "trItSystem" + i.ToString();
                        <tr id="@trId">
                            @Html.HiddenFor(e => Model.ItSystemList[i].Id, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(e => Model.ItSystemList[i].CompanyBusinessDailyId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(e => Model.ItSystemList[i].ParamName, new { htmlAttributes = new { @class = "form-control" } })
                            <td>
                                @Html.EditorFor(e => Model.ItSystemList[i].SubParamItem, new { htmlAttributes = new { @class = "form-control", id = "SubParamItem" + trId } })
                            </td>
                            <td>
                                @Html.EditorFor(e => Model.ItSystemList[i].ItemAmount, new { htmlAttributes = new { @class = "form-control" } })
                            </td>
                            <td>
                                <span onclick="DelSubParamItem('@trId')" class="glyphicon glyphicon-remove"></span>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.PhotoList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="glyphicon glyphicon-plus" onclick="AddPhoto(@Model.Id)"></span>
                <hr />
                @if (Model.PhotoList != null && Model.PhotoList.Count > 0)
                {
                    for (int i = 0; i < Model.PhotoList.Count; i++)
                    {
                        var imageUrl = @Url.Content("~/CompanyImages/BussinessDailies/" + Model.PhotoList[i].CompanyBusinessDailyId + "/" + Model.PhotoList[i].PhotoUrl);
                        <div class="col-md-2">
                            <a href="@imageUrl" class="thumbnail" target="_blank">
                                <img src="@imageUrl" style="height:100px;width:100px;display: block" />
                            </a>
                            <div class="caption">
                                <h6>@Model.PhotoList[i].PhotoName</h6>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.SoundRecordList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="glyphicon glyphicon-plus" onclick="AddAudio(@Model.Id)"></span>
                <hr />
                @if (Model.SoundRecordList != null && Model.SoundRecordList.Count > 0)
                {
                    for (int i = 0; i < Model.SoundRecordList.Count; i++)
                    {
                        var url = @Url.Content("~/CompanyImages/BussinessDailies/" + Model.PhotoList[i].CompanyBusinessDailyId + "/" + Model.SoundRecordList[i].SoundRecordUrl);
                        <audio controls="controls">
                            <source src="@url" type="audio/mp3" />
                        </audio>
                    }
                }
            </div>
        </div>
        <hr />


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回列表", "Index", new { companyId = Model.CompanyId })
</div>

<div class="modal" id="modalDiv" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h3 class="modal-title"></h3>
            </div>
            <div class="modal-body" id="modalBodyDiv">

            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-default" data-dismiss="modal">关闭</a>
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">
    $(".datetimepicker").datetimepicker({
        format: "YYYY-MM-DD"
    });

    var ShowModal = function (dailyId, paramName) {
        var serverUrl = "@Url.Content("~/")";
        var url = serverUrl + "CompanyBusinessDailies/AddBusinessDailyParam?dailyId=" + dailyId + "&paramName=" + paramName;
        $("#modalBodyDiv").load(url, function () {
            $("#modalDiv").modal("show");
        })
    }

    var AddPhoto = function (dailyId) {
        var serverUrl = "@Url.Content("~/")";
        var url = serverUrl + "CompanyBusinessDailyPhotoes/Create?dailyId=" + dailyId;
        $("#modalBodyDiv").load(url, function () {
            $("#modalDiv").modal("show");
        })
    }

    var AddAudio = function (dailyId) {
        var serverUrl = "@Url.Content("~/")";
        var url = serverUrl + "CompanyBusinessDailySoundRecords/Create?dailyId=" + dailyId;
        $("#modalBodyDiv").load(url, function () {
            $("#modalDiv").modal("show");
        })
    }

    var DelSubParamItem = function (trid) {
        $("#"+trid).find("#SubParamItem"+trid).attr("value","");
        $("#"+trid).hide();
    }
</script>